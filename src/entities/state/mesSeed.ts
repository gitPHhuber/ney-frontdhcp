import type { MesState } from '../mes/types';
import { seedReferenceTime } from './common';

const now = seedReferenceTime;

export const mesSeed: MesState = {
  routings: [
    {
      id: 'routing-router',
      itemId: 'item-fin-001',
      operations: [
        { opId: 'ROUTER-ASM', seq: 10, wcId: 'wc-assembly', stdTimeMin: 45 },
        { opId: 'ROUTER-TEST', seq: 20, wcId: 'wc-test', stdTimeMin: 35 },
        { opId: 'ROUTER-PACK', seq: 30, wcId: 'wc-pack', stdTimeMin: 12 },
      ],
    },
    {
      id: 'routing-flight-control',
      itemId: 'item-fin-002',
      operations: [
        { opId: 'FC-ASM', seq: 10, wcId: 'wc-assembly', stdTimeMin: 55 },
        { opId: 'FC-CAL', seq: 20, wcId: 'wc-calibration', stdTimeMin: 25 },
        { opId: 'FC-HIL', seq: 30, wcId: 'wc-hil', stdTimeMin: 45 },
        { opId: 'FC-BURN', seq: 40, wcId: 'wc-burnin', stdTimeMin: 60 },
      ],
    },
  ],
  workCenters: [
    { id: 'wc-assembly', name: 'Assembly Line 1', capabilityTags: ['smt', 'fpga'] },
    { id: 'wc-test', name: 'Functional Test Cell', capabilityTags: ['boundary-scan'] },
    { id: 'wc-pack', name: 'Packing Cell', capabilityTags: ['labeling', 'packout'] },
    { id: 'wc-calibration', name: 'Calibration Rig', capabilityTags: ['avionics', 'calibration'] },
    { id: 'wc-hil', name: 'HIL Validation Lab', capabilityTags: ['flight-control', 'hil'] },
    { id: 'wc-burnin', name: 'Burn-in Chamber', capabilityTags: ['thermal', 'stress'] },
  ],
  productionOrders: [
    {
      id: 'po-router-10',
      itemId: 'item-fin-001',
      qty: 25,
      dueDate: new Date(now.getTime() + 1000 * 60 * 60 * 24 * 5).toISOString(),
      status: 'in-progress',
      releasedAt: new Date(now.getTime() - 1000 * 60 * 60 * 12).toISOString(),
    },
    {
      id: 'po-router-11',
      itemId: 'item-fin-001',
      qty: 15,
      dueDate: new Date(now.getTime() + 1000 * 60 * 60 * 24 * 10).toISOString(),
      status: 'released',
      releasedAt: new Date(now.getTime() - 1000 * 60 * 60 * 3).toISOString(),
    },
    {
      id: 'po-flight-01',
      itemId: 'item-fin-002',
      qty: 12,
      dueDate: new Date(now.getTime() + 1000 * 60 * 60 * 24 * 8).toISOString(),
      status: 'released',
      releasedAt: new Date(now.getTime() - 1000 * 60 * 60 * 6).toISOString(),
    },
  ],
  workOrders: [
    {
      id: 'wo-router-10-1',
      prodOrderId: 'po-router-10',
      opId: 'ROUTER-ASM',
      wcId: 'wc-assembly',
      assignee: 'alexei',
      status: 'in-progress',
      startedAt: new Date(now.getTime() - 1000 * 60 * 40).toISOString(),
    },
    {
      id: 'wo-router-10-2',
      prodOrderId: 'po-router-10',
      opId: 'ROUTER-TEST',
      wcId: 'wc-test',
      assignee: 'mila',
      status: 'planned',
    },
    {
      id: 'wo-router-11-1',
      prodOrderId: 'po-router-11',
      opId: 'ROUTER-ASM',
      wcId: 'wc-assembly',
      status: 'planned',
    },
    {
      id: 'wo-flight-01-1',
      prodOrderId: 'po-flight-01',
      opId: 'FC-ASM',
      wcId: 'wc-assembly',
      assignee: 'sergey',
      status: 'in-progress',
      startedAt: new Date(now.getTime() - 1000 * 60 * 90).toISOString(),
    },
    {
      id: 'wo-flight-01-2',
      prodOrderId: 'po-flight-01',
      opId: 'FC-CAL',
      wcId: 'wc-calibration',
      assignee: 'daria',
      status: 'planned',
    },
    {
      id: 'wo-flight-01-3',
      prodOrderId: 'po-flight-01',
      opId: 'FC-HIL',
      wcId: 'wc-hil',
      status: 'planned',
    },
    {
      id: 'wo-flight-01-4',
      prodOrderId: 'po-flight-01',
      opId: 'FC-BURN',
      wcId: 'wc-burnin',
      status: 'planned',
    },
  ],
  qualityChecks: [
    {
      id: 'qc-wo-router-10-1',
      entityType: 'WorkOrder',
      entityId: 'wo-router-10-1',
      ruleId: 'qc-solder-visual',
      status: 'pending',
      evidence: [],
    },
    {
      id: 'qc-flight-imu',
      entityType: 'WorkOrder',
      entityId: 'wo-flight-01-2',
      ruleId: 'qc-calibration',
      status: 'pending',
      evidence: [],
    },
    {
      id: 'qc-flight-hil',
      entityType: 'WorkOrder',
      entityId: 'wo-flight-01-3',
      ruleId: 'qc-hil-regression',
      status: 'blocked',
      evidence: [],
    },
  ],
  nonconformances: [
    {
      id: 'nc-router-01',
      refType: 'WorkOrder',
      refId: 'wo-router-10-1',
      severity: 'medium',
      status: 'investigating',
      action: 'Rework solder joint on board 4',
    },
    {
      id: 'nc-flight-01',
      refType: 'WorkOrder',
      refId: 'wo-flight-01-3',
      severity: 'high',
      status: 'open',
      action: 'Firmware regression blocked HIL campaign',
    },
  ],
  maintenanceOrders: [
    {
      id: 'mo-line1-01',
      assetId: 'wc-assembly',
      type: 'preventive',
      status: 'scheduled',
      schedule: new Date(now.getTime() + 1000 * 60 * 60 * 24 * 2).toISOString(),
      logs: [
        {
          id: 'mo-line1-01-log1',
          ts: new Date(now.getTime() - 1000 * 60 * 60 * 24).toISOString(),
          note: 'Lubricated conveyor chain',
          actor: 'maintenance-bot',
        },
      ],
    },
    {
      id: 'mo-hil-02',
      assetId: 'wc-hil',
      type: 'corrective',
      status: 'in-progress',
      schedule: new Date(now.getTime() + 1000 * 60 * 60 * 6).toISOString(),
      logs: [
        {
          id: 'mo-hil-02-log1',
          ts: new Date(now.getTime() - 1000 * 60 * 45).toISOString(),
          note: 'Investigating actuator jitter during HIL run',
          actor: 'maintenance-bot',
        },
      ],
    },
  ],
  productionLines: [
    {
      id: 'pl-router-a',
      name: 'Router Assembly A',
      streamId: 'stream-network',
      workCenterIds: ['wc-assembly', 'wc-test', 'wc-pack'],
      shiftPattern: '2x8',
      taktTimeSec: 420,
      targetPerShift: 12,
      currentWip: 18,
      throughputPerShift: 10,
      availability: 0.92,
      blockers: ['Awaiting lot CAP-2404'],
    },
    {
      id: 'pl-router-b',
      name: 'Router Assembly B',
      streamId: 'stream-network',
      workCenterIds: ['wc-assembly', 'wc-test', 'wc-pack'],
      shiftPattern: 'night flex',
      taktTimeSec: 480,
      targetPerShift: 9,
      currentWip: 11,
      throughputPerShift: 8,
      availability: 0.87,
      blockers: [],
    },
    {
      id: 'pl-flight',
      name: 'Flight Control Line',
      streamId: 'stream-flight-control',
      workCenterIds: ['wc-assembly', 'wc-calibration', 'wc-hil', 'wc-burnin'],
      shiftPattern: '3x8',
      taktTimeSec: 1680,
      targetPerShift: 6,
      currentWip: 14,
      throughputPerShift: 5,
      availability: 0.78,
      blockers: ['Firmware 2.4.8 sign-off pending'],
    },
  ],
  valueStreams: [
    {
      id: 'stream-network',
      name: 'Network Infrastructure',
      focus: 'Edge routers & network appliances',
      demandThisWeek: 34,
      backlogUnits: 19,
      riskLevel: 'medium',
      gatekeepers: ['network-production'],
      nextMilestone: 'Customer FAT with CityNet on Friday',
    },
    {
      id: 'stream-flight-control',
      name: 'Flight Control Electronics',
      focus: 'Autopilot & flight control boards',
      demandThisWeek: 18,
      backlogUnits: 12,
      riskLevel: 'high',
      gatekeepers: ['flight-control-lab'],
      nextMilestone: 'Qualification run with avionics QA',
    },
  ],
  testCells: [
    {
      id: 'tc-hil-01',
      name: 'HIL Rig 01',
      capability: '6-axis motion simulation',
      status: 'online',
      queueDepth: 3,
      activePlanId: 'plan-flight-hil',
      shift: 'Day A',
      operators: ['daria', 'ilya'],
    },
    {
      id: 'tc-hil-02',
      name: 'HIL Rig 02',
      capability: 'Rotorcraft dynamics',
      status: 'maintenance',
      queueDepth: 5,
      activePlanId: 'plan-flight-hil',
      shift: 'Day B',
      operators: ['sergey'],
    },
    {
      id: 'tc-burn-01',
      name: 'Thermal Burn-In Chamber',
      capability: 'Environmental stress',
      status: 'online',
      queueDepth: 2,
      activePlanId: 'plan-burnin',
      shift: 'Swing',
      operators: ['valentina'],
    },
  ],
  testPlans: [
    {
      id: 'plan-flight-hil',
      name: 'Flight Control Regression',
      coverage: 0.93,
      cycleTimeMin: 45,
      ownerTeam: 'flight-control-lab',
      requiredFor: ['item-fin-002'],
      lastValidatedAt: new Date(now.getTime() - 1000 * 60 * 60 * 20).toISOString(),
    },
    {
      id: 'plan-burnin',
      name: '48h Burn-in',
      coverage: 0.75,
      cycleTimeMin: 120,
      ownerTeam: 'environmental-test',
      requiredFor: ['item-fin-001', 'item-fin-002'],
      lastValidatedAt: new Date(now.getTime() - 1000 * 60 * 60 * 72).toISOString(),
    },
  ],
  testRuns: [
    {
      id: 'run-hil-001',
      testCellId: 'tc-hil-01',
      planId: 'plan-flight-hil',
      boardSerial: 'FCB-2403-011',
      status: 'running',
      startedAt: new Date(now.getTime() - 1000 * 60 * 20).toISOString(),
      operatorId: 'daria',
      defectsFound: 0,
    },
    {
      id: 'run-hil-002',
      testCellId: 'tc-hil-01',
      planId: 'plan-flight-hil',
      boardSerial: 'FCB-2403-010',
      status: 'failed',
      startedAt: new Date(now.getTime() - 1000 * 60 * 90).toISOString(),
      finishedAt: new Date(now.getTime() - 1000 * 60 * 40).toISOString(),
      operatorId: 'ilya',
      defectsFound: 2,
    },
    {
      id: 'run-burn-001',
      testCellId: 'tc-burn-01',
      planId: 'plan-burnin',
      boardSerial: 'ER1U-24-1011',
      status: 'queued',
      startedAt: new Date(now.getTime() - 1000 * 60 * 10).toISOString(),
      operatorId: 'valentina',
      defectsFound: 0,
    },
  ],
};
